{"version":3,"sources":["ApiClient.js"],"names":[],"mappings":";;;;;;;;;;AAAA,SAAS,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE;AAC/B,MAAI,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;AAC7B,KAAG,CAAC,WAAW,GAAG,IAAI,CAAC;AACvB,KAAG,CAAC,IAAI,GAAG,IAAI,CAAC;AAChB,SAAO,GAAG,CAAC;CACZ;;IAEK,SAAS;eAAT,SAAS;;WAED,sBAAC,IAAI,EAAE;AACjB,UAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3C,UAAI,IAAI,CAAC,IAAI,EAAE;AACb,UAAE,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;OACvB;AACD,QAAE,IAAI,IAAI,CAAC,IAAI,CAAC;AAChB,aAAO,EAAE,CAAC;KACX;;;AAEU,WAXP,SAAS,CAWD,IAAI,EAAE;0BAXd,SAAS;;AAaX,QAAI,CAAC,IAAI,GAAG,eAAc;AACxB,UAAI,EAAE,UAAU;AAChB,UAAI,EAAE,IAAI;AACV,cAAQ,EAAE,MAAM;AAChB,aAAO,EAAE,SAAS;AAClB,UAAI,EAAE,SAAS;KAChB,EAAE,IAAI,CAAC,CAAC;;AAGT,QAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACtB,UAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClD;;;GAIF;;eA5BG,SAAS;;6BA8BQ,WAAC,UAAU,EAAE,IAAI,EAAE;AACtC,UAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;;;AAGhC,UAAI,GAAG,IAAI,IAAI,IAAI,CAAC;;AAEpB,UAAI,IAAI,GAAG,OAAO,GAAG,GAAG,GAAG,kBAAkB,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;;AAG3G,UAAI,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,EAAE;AAC/B,mBAAW,EAAE,aAAa;OAC3B,CAAC,CAAC;AACH,UAAI,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AACjC,UAAI,IAAI,CAAC,GAAG,EAAE;AACZ,cAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,mBAAmB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;OAChE;AACD,aAAO,IAAI,CAAC;KAEb;;;SAhDG,SAAS;;;AAoDf,IAAI,OAAO,MAAM,AAAC,KAAK,QAAQ,EAAE;AAC/B,QAAM,CAAC,UAAU,GAAG,IAAI,SAAS,EAAE,CAAC;AACpC,QAAM,CAAC,QAAQ,GAAG,YAAmB;;;AACnC,WAAO,sBAAA,MAAM,CAAC,UAAU,EAAC,eAAe,MAAA,+BAAS,CAAC;GACnD,CAAA;CACF;;;;;;;;;;;;;;;;AAgBD,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;;AAE9B,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"ApiClient.js","sourcesContent":["function ApiError(code, message) {\n  var err = new Error(message);\n  err._isApiError = true;\n  err.code = code;\n  return err;\n}\n\nclass ApiClient {\n\n  _makeBaseUrl(opts) {\n    let bu = opts.protocol + '://' + opts.host;\n    if (opts.port) {\n      bu += ':' + opts.port;\n    }\n    bu += opts.path;\n    return bu;\n  }\n\n  constructor(opts) {\n\n    this.opts = Object.assign({\n      host: 'exp.host',\n      port: null,\n      protocol: 'http',\n      baseUrl: undefined,\n      path: '/--/api',\n    }, opts);\n\n\n    if (!this.opts.baseUrl) {\n      this.opts.baseUrl = this._makeBaseUrl(this.opts);\n    }\n\n    // TODO: Credentials\n\n  }\n\n  async callMethodAsync(methodName, args) {\n    let baseUrl = this.opts.baseUrl;\n\n    // To avoid parse errors when you `stringify` then `parse` `undefined`.\n    args = args || null;\n\n    let url_ = baseUrl + '/' + encodeURIComponent(methodName) + '/' + encodeURIComponent(JSON.stringify(args));\n\n    // require('whatwg-fetch');\n    var response = await fetch(url_, {\n      credentials: 'same-origin'\n    });\n    var json = await response.json();\n    if (json.err) {\n      throw ApiError(json.err.code || 'UNKNOWN_API_ERROR', json.err);\n    }\n    return json;\n\n  }\n\n}\n\nif (typeof(window) === 'object') {\n  window._apiClient = new ApiClient();\n  window.apiAsync = function (...args) {\n    return window._apiClient.callMethodAsync(...args);\n  }\n}\n\n// if (typeof(window) === 'object') {\n//   window.apiAsync = callMethodAsync;\n//   window.loginAsync = function (username, password, type) {\n//     return window.apiAsync('adduser', {\n//       username,\n//       password,\n//       type,\n//     }).then((result) => {\n//\n//     });\n//\n//   };\n// }\n\nApiClient.ApiError = ApiError;\n\nmodule.exports = ApiClient;\n"],"sourceRoot":"/source/"}